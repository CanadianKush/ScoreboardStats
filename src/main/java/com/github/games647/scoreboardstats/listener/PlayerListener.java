package com.github.games647.scoreboardstats.listener;import com.github.games647.scoreboardstats.pvpstats.Database;import com.github.games647.scoreboardstats.pvpstats.PlayerCache;import org.bukkit.entity.Player;import org.bukkit.event.EventHandler;import static com.github.games647.scoreboardstats.MainClass.getSettings;import static com.github.games647.scoreboardstats.scoreboard.SbManager.createScoreboard;public final class PlayerListener implements org.bukkit.event.Listener {    @EventHandler    public static void onDeath(final org.bukkit.event.entity.PlayerDeathEvent death) {        final Player killed = death.getEntity();        final PlayerCache killedcache = Database.getCache(killed.getName());        final Player killer = killed.getKiller();        if (!getSettings().isPvpStats() || getSettings().checkWorld(killed.getWorld().getName())) {            return;        }        if (killedcache != null) {            killedcache.onDeath();        }        if (killer != null && killer.isOnline()) {            final PlayerCache killercache = Database.getCache(killer.getName());            if (killercache != null) {                killercache.onKill();            }        }    }    @EventHandler(priority = org.bukkit.event.EventPriority.MONITOR) // To set the scoreboard correctly    public static void onJoin(final org.bukkit.event.player.PlayerJoinEvent join) {        final Player player = join.getPlayer();        if (getSettings().isPvpStats()) {            Database.loadAccount(player.getName());        }        if (!getSettings().checkWorld(player.getWorld().getName())) {            createScoreboard(player);        }    }    @EventHandler(ignoreCancelled = true)    public static void onChange(final org.bukkit.event.player.PlayerChangedWorldEvent teleport) {        final Player player = teleport.getPlayer();        if (getSettings().checkWorld(player.getWorld().getName())) {            player.getScoreboard().clearSlot(org.bukkit.scoreboard.DisplaySlot.SIDEBAR);        } else {            createScoreboard(player);        }    }    @EventHandler    public static void onKick(final org.bukkit.event.player.PlayerKickEvent kick) {        Database.saveAccount(kick.getPlayer().getName(), true);    }    @EventHandler    public static void onQuit(final org.bukkit.event.player.PlayerQuitEvent quit) {        Database.saveAccount(quit.getPlayer().getName(), true);    }}