package com.github.games647.scoreboardstats.listener;import com.github.games647.scoreboardstats.ScoreboardStats;import com.github.games647.scoreboardstats.Settings;import com.github.games647.scoreboardstats.pvpstats.Database;import com.github.games647.scoreboardstats.pvpstats.PlayerCache;import org.bukkit.Bukkit;import org.bukkit.entity.Player;import org.bukkit.event.EventHandler;import org.bukkit.event.Listener;import org.bukkit.event.entity.PlayerDeathEvent;import org.bukkit.event.player.PlayerChangedWorldEvent;import org.bukkit.event.player.PlayerJoinEvent;import org.bukkit.scoreboard.DisplaySlot;public class PlayerListener implements Listener {    @EventHandler    public void onDeath(PlayerDeathEvent deathEvent) {        final Player killed = deathEvent.getEntity();        final Player killer = killed.getKiller();        if (Settings.isPvpStats() && !Settings.isDisabledWorld(killed.getWorld().getName())) {            final PlayerCache killedcache = Database.getCacheIfAbsent(killed.getName());            if (killedcache != null) {                killedcache.onDeath();            }            if (killer != null) {                final PlayerCache killercache = Database.getCacheIfAbsent(killer.getName());                if (killercache != null) {                    killercache.onKill();                }            }        }    }    @EventHandler    public void onJoin(PlayerJoinEvent join) {        final Player player = join.getPlayer();        if (Settings.isPvpStats()) {            Bukkit.getScheduler().runTaskAsynchronously(ScoreboardStats.getInstance(), new Runnable() {                @Override                public void run() {                    Database.loadAccount(player.getName());                }            });        }    }    @EventHandler(ignoreCancelled = true)    public void onChange(PlayerChangedWorldEvent teleport) {        final Player player = teleport.getPlayer();        if (Settings.isDisabledWorld(player.getWorld().getName())) {            player.getScoreboard().clearSlot(DisplaySlot.SIDEBAR);        }    }}