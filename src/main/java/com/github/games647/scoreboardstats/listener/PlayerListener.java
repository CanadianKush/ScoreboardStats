package com.github.games647.scoreboardstats.listener;import static com.github.games647.scoreboardstats.ScoreboardStats.getSettings;import static com.github.games647.scoreboardstats.scoreboard.Score.createScoreboard;import com.github.games647.scoreboardstats.pvpstats.Database;import org.bukkit.entity.Player;import org.bukkit.event.EventHandler;public final class PlayerListener implements org.bukkit.event.Listener {    @EventHandler    public void onDeath(final org.bukkit.event.entity.PlayerDeathEvent death) {        if ((!getSettings().isPvpstats()) || (getSettings().checkWorld(death.getEntity().getWorld().getName()))) {            return;        }        final Player killed = death.getEntity();        if (Database.getCache(killed.getName()) == null) {            return;        }        Database.getCache(killed.getName()).increaseDeaths();        final Player killer = killed.getKiller();        if ((killer != null) && (killer.isOnline()) && (!(Database.getCache(killed.getName()) == null))) {            Database.getCache(killer.getName()).increaseKills();            Database.getCache(killer.getName()).increaseLastSreak();            Database.getCache(killer.getName()).onKill();        }    }    @EventHandler    public void onJoin(final org.bukkit.event.player.PlayerJoinEvent join) {        if (getSettings().checkWorld(join.getPlayer().getWorld().getName())) {            return;        }        if (getSettings().isPvpstats()) {            Database.loadAccount(join.getPlayer().getName());        }        createScoreboard(join.getPlayer());    }    @EventHandler(ignoreCancelled = true)    public void onChange(final org.bukkit.event.player.PlayerChangedWorldEvent teleport) {        if (getSettings().checkWorld(teleport.getPlayer().getWorld().getName())) {            teleport.getPlayer().getScoreboard().clearSlot(org.bukkit.scoreboard.DisplaySlot.SIDEBAR);        } else {            createScoreboard(teleport.getPlayer());        }    }    @EventHandler    public void onKick(final org.bukkit.event.player.PlayerKickEvent kick) {        Database.saveAccount(kick.getPlayer().getName(), true);    }    @EventHandler    public void onQuit(final org.bukkit.event.player.PlayerQuitEvent quit) {        Database.saveAccount(quit.getPlayer().getName(), true);    }}